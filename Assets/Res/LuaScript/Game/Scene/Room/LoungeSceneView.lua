---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Simon.L
--- DateTime: 2022/10/9 19:02
---

local SceneViewBase = require("SceneViewBase")
local GameEvent = require("GameEvent")
local Log = require("Log")
local TimerInst = require("TimerManager"):GetInstance()
local SceneManager = require("SceneManager")
local DeviceData = require("DeviceData")
local DeviceDataInst = require("DeviceData"):GetInstance()
local TimeUtil = require("TimeUtil")
local GameDefine = require("GameDefine")
local AvatarManager = require("AvatarManager")
local AvatarEvent = require("AvatarEvent")
local MapManager = require("MapManager")
local ConfigManager = require("ConfigManager")
local HotelData = require("HotelData")
local CoinView = require("CoinView")

---@class LoungeSceneView : UIBase 休息室
---@field private go_table LoungeSceneView_GoTable GoTable
---@field private ParentCls UIBase 父窗口类
---@field SortInfoList LoungeSortInfo[] 排序数据
---@field CoinViews CoinView[] 金币掉落
local LoungeSceneView = Class("LoungeSceneView", SceneViewBase)

---@class LoungeSceneView.eSortType 排序的类型
LoungeSceneView.eSortType = {
    Avatar = 1,
    FurnitureSingle = 2
}
---@class LoungeSceneView.FurnitureNodeState
LoungeSceneView.FurnitureNodeState = {
    Locked = 1,
    TransPort = 2,
    TransFinish = 3,
    Show = 4
}
---添加Events监听事件
function LoungeSceneView:Awake()
    --self.Timer = TimerInst:GetTimerStart(1,self.OnTimer,self)
    --家具升级
    self:AddEvent(GameEvent.UpGradeFurnitureEvent)
    --运输完成
    self:AddEvent(GameEvent.FurnitureOnTheWayOverEvent)

    self:AddEvent(GameEvent.RoomFurnitureLookAt)
    --点击场景使用
    self:AddEvent(GameEvent.RoomFurnitureEffectFinish)
    --家具更换事件
    self:AddEvent(GameEvent.ChangeFurnitureEvent)
    --家具立即解锁
    self:AddEvent(GameEvent.UnlockFurnitureImmediately)
    --进出房间
    self:AddEvent(AvatarEvent.EnterRoom)
    self:AddEvent(AvatarEvent.ExitRoom)
    --触发金币
    self:AddEvent(GameEvent.TriggerCoin)
    self:AddEvent(GameEvent.CoinCollected)
end
--- 窗口显示[protected]
---@param ... any @窗口传参
function LoungeSceneView:OnCreate()
    self.SortInfoList = {}
    self.NodeEffectDic = {}
    self.RoomId = SceneManager:GetInstance().RoomId
    ---大通铺大小
    self:ResetSceneSize(Vector2.New(1181, 1181))
    ---初始化家具节点
    self:InitFurnitureNodes()
    ---运输中的家具
    self.TransFurnitureComps = {}
    ---@type table<number,DeviceFieldData>
    local houseDeviceData = DeviceDataInst:GetHouseData(self.RoomId)
    for i, v in pairs(houseDeviceData) do
        --场景家具节点
        local furnitureNode = self:GetFurnitureNode(i)
        if furnitureNode ~= nil then
            --家具显示
            if v.CurUseFurnitureId ~= nil then
                self:ShowFurnitureImage(v.CurUseFurnitureId)
            else
                furnitureNode.FurnitureImage.gameObject:SetActive(false)
            end
            --处理运输
            if v.OnThewayFiledIds ~= nil and table.count(v.OnThewayFiledIds) > 0 then
                --运输中id
                local transPostIds = table.keys(v.OnThewayFiledIds)
                --运输中endtime
                local transPostEndtimes = table.values(v.OnThewayFiledIds)
                if #transPostIds > 0 then
                    local curTransportId = transPostIds[1]
                    local curTransportEndTime = transPostEndtimes[1]
                    if curTransportEndTime > TimeUtil.GetSecTime() then
                        --运输中
                        self:SetFurnitureNodeState(furnitureNode, LoungeSceneView.FurnitureNodeState.TransPort, curTransportId)
                    else
                        --运输完成
                        self:SetFurnitureNodeState(furnitureNode, LoungeSceneView.FurnitureNodeState.TransFinish, curTransportId)
                    end
                end
            end
        else
            Log.Debug("furnitureNode not exsit ID:" .. i)
        end
    end
    --人物精灵

    self:InitAvatars()
    self:InitCoinViews()
    ---帧刷新
    self.OrderTimer = TimerInst:GetTimerStartImme(6, self.OnOrderTimer, self, false, true);
end

---@param node SceneFurnitureNode
---@param state LoungeSceneView.FurnitureNodeState
function LoungeSceneView:SetFurnitureNodeState(node, state, showFurnitureId)
    local nodeGo = node.FurnitureNode
    ---@type UnityEngine.GameObject
    local transportGo = self:CloneTransportGo(nodeGo)
    ---@type FurnitureTransView
    local transCom = self:GetOrAddComponent(transportGo, require("FurnitureTransView"), state, showFurnitureId)
    self.TransFurnitureComps[showFurnitureId] = transCom
end

---@param targetGo  UnityEngine.GameObject
function LoungeSceneView:CloneTransportGo(targetGo)
    local transportGo = CS.UnityEngine.Object.Instantiate(self.go_table.obj_transport, targetGo.transform)
    transportGo.transform.localPosition = Vector3.zero
    transportGo.transform.gameObject:SetActive(true)
    return transportGo
end

---初始化家具节点
function LoungeSceneView:InitFurnitureNodes()
    ---@type table<number,SceneFurnitureNode>
    self.FurnitureNodes = {}
    local FurnitureFieldArr = Config.GetConfigByField(Config.furniture, "house_type", { self.RoomId })
    --,function(l, r)
    --    return l.sort > r.sort
    --end
    for i = 1, #FurnitureFieldArr do
        ---@type furniture_field_Item
        local field = FurnitureFieldArr[i]
        ---@type SceneFurnitureNode
        local node = {
            FurnitureId = field.id
        , FurnitureNode = self.go_table["obj_" .. field.id]
        , FurnitureImage = self.go_table["simg_" .. field.id]
        }
        self.FurnitureNodes[field.id] = node
        --先隐藏
        node.FurnitureImage.gameObject:SetActive(false)
        local tilePos = MapManager:GetInstance().FurnitureTilePosDic[field.id]
        if tilePos ~= nil and #tilePos > 0 then
            --添加到排序中
            ---@type LoungeSortInfo
            local sortInfo = {
                Type = LoungeSceneView.eSortType.FurnitureSingle,
                Node = node.FurnitureNode,
                PosX = tilePos[1].x,
                PosY = tilePos[1].y,
                OffsetY = Mathf.Random(1,100)/1000
            }
            table.insert(self.SortInfoList, sortInfo)
        end
    end

end

---获取家具节点
function LoungeSceneView:GetFurnitureNode(furnitureId)
    return self.FurnitureNodes[furnitureId]
end

---事件处理
---@private
---@param id EventID 事件ID
function LoungeSceneView:EventHandle(id, ...)
    --家具升级
    if id == GameEvent.UpGradeFurnitureEvent then
        self:OnUpGradeFurniture(...)
        --运输完成
    elseif id == GameEvent.FurnitureOnTheWayOverEvent then
        self:OnFurnitureTranslateFinish(...)
    elseif id == GameEvent.RoomFurnitureLookAt then
        --解锁完成使用
        self:OnRoomFurnitureLookAt(...)
    elseif id == GameEvent.RoomFurnitureEffectFinish then
        ---播放属性预制
        self:ShowShuXingUi(...)
        self:ShowFurnitureImage(...)
    elseif id == GameEvent.ChangeFurnitureEvent then
        self:OnChangeFurnitureEvent(...)
    elseif id == GameEvent.UnlockFurnitureImmediately then
        self:OnFurnitureImmeFinish(...)
    elseif id == AvatarEvent.EnterRoom then
        self:OnAvatarEnterRoom(...)
    elseif id == AvatarEvent.ExitRoom then
        self:OnAvatarExitRoom(...)
    elseif id == GameEvent.TriggerCoin then
        self:OnTriggerCoin(...)
    elseif id == GameEvent.CoinCollected then
        self:OnCoinCollected(...)
    end
end

---播放属性ui
function LoungeSceneView:ShowShuXingUi(furnitureId)
    local fieldId = DeviceDataInst:GetFieldId(furnitureId)
    local node = self:GetFurnitureNode(fieldId)

    ---@type furniture_level_Item
    local fData = Config.furniture_level[furnitureId]

    local tabStr = {}
    local tabImgStr = {}
    --房间属性 词条
    local paramsData = fData.param_num

    for i, v in pairs(fData.param_type) do
        local num = paramsData[i]
        local str
        local iconName = "Icon_coin"
        if (v == 1) then
            str = "+" .. num
            iconName = "Icon_coin"
        elseif v == 2 then
            str = "+" .. num .. "/m"
        elseif v == 3 then
            str = LanguageUtil:GetValue("Common_button_use") .. ":+" .. num
        elseif v == 4 then
            str = "+" .. num .. "/30s"
        elseif v == 5 then
            iconName = "Icon_Popularity"
            str = "+" .. num
        end
        table.insert(tabStr, str)
        table.insert(tabImgStr, iconName)
    end

    local y = node.FurnitureImage.transform.rect.height / 2
    local x = node.FurnitureImage.transform.rect.width / 2
    self.go_table.obj_shuxing.transform.localPosition = node.FurnitureNode.transform.localPosition
    for i, v in pairs(tabStr) do
        local itemNodeClone = CS.UnityEngine.Object.Instantiate(self.go_table.obj_FurnitureFlyViewItem, self.go_table.obj_shuxing.transform)
        itemNodeClone.transform.gameObject:SetActive(true)
        itemNodeClone.transform.localPosition = Vector2.New(0, 0)
        local item = self:GetOrAddComponent(itemNodeClone, require("FurnitureFlyViewItem"))
        local time = i - 1
        item:InitData(v, tabImgStr[i], time, function()
            self:DestoryComponentGameObj(item.gameObject)
        end)
    end


end

function LoungeSceneView:CreateFurnitureCom(furnitureId, state)
    local fieldId = DeviceDataInst:GetFieldId(furnitureId)
    if IsNil(self.TransFurnitureComps[furnitureId]) then
        local node = self:GetFurnitureNode(fieldId)
        if node ~= nil then
            local nodeGo = node.FurnitureNode
            if nodeGo ~= nil then
                local transportGo = self:CloneTransportGo(nodeGo)
                ---@type FurnitureTransView
                local transCom = self:GetOrAddComponent(transportGo, require("FurnitureTransView"), state, furnitureId)
                self.TransFurnitureComps[furnitureId] = transCom

                return transCom
            else
                return nil
            end
        end
    end
    return nil
end

---@param furnitureId number
---@param type DeviceData.UnlockType
function LoungeSceneView:OnUpGradeFurniture(furnitureId, type)
    if type == DeviceData.UnlockType.Normal then
        self:CreateFurnitureCom(furnitureId, LoungeSceneView.FurnitureNodeState.TransPort)
    end
end

---家具立即完成
function LoungeSceneView:OnFurnitureImmeFinish(furnitureId)
    ---@type FurnitureTransView
    local transCom = nil
    if IsNil(self.TransFurnitureComps[furnitureId]) then
        --没有创建一个
        transCom = self:CreateFurnitureCom(furnitureId, LoungeSceneView.FurnitureNodeState.TransFinish)
    else
        transCom = self.TransFurnitureComps[furnitureId]
    end
    transCom:PlayFinishEffect()
end

---运输完成显示勾勾
function LoungeSceneView:OnFurnitureTranslateFinish(furnitureId)
    ---@type FurnitureTransView
    local transCom = nil
    if IsNil(self.TransFurnitureComps[furnitureId]) then
        --没有创建一个
        transCom = self:CreateFurnitureCom(furnitureId, LoungeSceneView.FurnitureNodeState.TransFinish)
    else
        transCom = self.TransFurnitureComps[furnitureId]
    end
    transCom:ShowTransFinish()
end

---@param furnitureId number 移动到的家具id
function LoungeSceneView:OnRoomFurnitureLookAt(furnitureId)
    local fieldId = DeviceDataInst:GetFieldId(furnitureId)
    local node = self:GetFurnitureNode(fieldId)
    if node ~= nil then
        local nodeGo = node.FurnitureNode
        if nodeGo ~= nil then
            self:CameraMoveTo(nodeGo.transform.localPosition, 0.5)
        end
    end
end

function LoungeSceneView:RemoveTransView(furnitureId)
    if not IsNil(self.TransFurnitureComps[furnitureId]) then
        ---销毁运输
        ---@type FurnitureTransView
        local transCom = self.TransFurnitureComps[furnitureId]
        ---清理运输节点上的组件
        self:DestoryComponentGameObj(transCom.gameObject)
        self.TransFurnitureComps[furnitureId] = nil

    end
end

function LoungeSceneView:ShowFurnitureImage(furnitureId, showShiny)
    ---显示家具node
    local fieldId = DeviceDataInst:GetFieldId(furnitureId)
    local node = self:GetFurnitureNode(fieldId)
    if node ~= nil then
        node.FurnitureImage.gameObject:SetActive(true)
        --处理显示
        if furnitureId ~= nil then
            local cfg = Config.furniture_level[furnitureId]
            if cfg ~= nil then
                node.FurnitureImage:LoadSprite(GameDefine.eResPath.AtlasRoomFurniture .. "Lounge/" .. cfg.art, true, 1)
            end
            if showShiny then
                node.FurnitureImage:ShowUIShiny(1.5)
            end
        end
    end
end

---家具更换
function LoungeSceneView:OnChangeFurnitureEvent(furnitureId)
    self:ShowFurnitureImage(furnitureId, true)
end

--region -----------------墙和地板升级闪光-------------------
function LoungeSceneView:StartNodeEffect(furnitureId)
    local fieldId = DeviceDataInst:GetFieldId(furnitureId)
    local node = self:GetFurnitureNode(fieldId)
    if node ~= nil then
        local seq = CS.DG.Tweening.DOTween.Sequence()
        seq:Append(node.FurnitureImage:DOFade(0.5, 1.5))
        seq:Append(node.FurnitureImage:DOFade(1, 1.5))
        seq:SetLoops(-1)
        self.NodeEffectDic[furnitureId] = seq
    end
end
function LoungeSceneView:StopNodeEffect(furnitureId)
    if self.NodeEffectDic then
        local seq = self.NodeEffectDic[furnitureId]
        if seq then
            seq:Kill()
        end
    end
    --恢复透明度
    local fieldId = DeviceDataInst:GetFieldId(furnitureId)
    local node = self:GetFurnitureNode(fieldId)
    if node ~= nil then
        node.FurnitureImage.Alpha = 1
    end
end

--endregion -----------------墙和地板升级闪光-------------------

--region -------------------精灵view-------------------------
function LoungeSceneView:InitAvatars()
    ---管理所有avtarView
    local avatarMachines = AvatarManager:GetInstance():GetRoomAvatarMachines(self.RoomId)
    if avatarMachines ~= nil then
        for i = 1, #avatarMachines do
            local avatarGo = self:CloneAvatarNode(self.go_table.obj_scene)
            ---@type AvatarView
            local avatarView = self:GetOrAddComponent(avatarGo, require("AvatarView"), 1.2)
            local machine = avatarMachines[i]
            machine:SetView(avatarView)

            --添加到排序中
            ---@type LoungeSortInfo
            local sortInfo = {
                Type = LoungeSceneView.eSortType.Avatar,
                Node = avatarGo,
                Machine = machine
            }
            table.insert(self.SortInfoList, sortInfo)
        end
    end
end

---@param pNode UnityEngine.GameObject
---@return UnityEngine.GameObject
function LoungeSceneView:CloneAvatarNode(pNode)
    ---@type UnityEngine.GameObject
    local avatarGo = CS.UnityEngine.Object.Instantiate(self.go_table.obj_avatar, pNode.transform)
    avatarGo.transform.localPosition = Vector3.zero
    avatarGo.transform.gameObject:SetActive(true)
    --avatarGo.transform:SetLocalScaleXYZ(1.5)

    ---spine
    return avatarGo
end

function LoungeSceneView:OnAvatarEnterRoom(roomId, avatarId)
    if roomId == self.RoomId then
        local avatarGo = self:CloneAvatarNode(self.go_table.obj_scene)
        ---@type AvatarView
        local avatarView = self:GetOrAddComponent(avatarGo, require("AvatarView"), 1.2)
        local machine = AvatarManager:GetInstance():GetAvatarMachineById(avatarId)
        machine:SetView(avatarView)

        --添加到排序中
        ---@type LoungeSortInfo
        local sortInfo = {
            Type = LoungeSceneView.eSortType.Avatar,
            Node = avatarGo,
            Machine = machine
        }
        table.insert(self.SortInfoList, sortInfo)
    end
end

function LoungeSceneView:OnAvatarExitRoom(roomId, avatarId)
    if roomId == self.RoomId then
        self:OnClearAvatarView(avatarId)
    end
end
---清除avatarview
---@param avatarId number
function LoungeSceneView:OnClearAvatarView(avatarId)
    local machine = AvatarManager:GetInstance():GetAvatarMachineById(avatarId)
    local view = machine.View
    if view ~= nil then
        self:DestoryComponentGameObj(view.gameObject)
        machine:SetView(nil)
    else
        Log.Debug("精灵界面已经释放")
    end

    --从排序中移除
    for i = 1, #self.SortInfoList do
        if self.SortInfoList[i].Machine ~= nil and self.SortInfoList[i].Machine == machine then
            table.remove(self.SortInfoList, i)
            break
        end
    end
end

function LoungeSceneView:ClearAllAvatarView()
    local avatarMachines = AvatarManager:GetInstance():GetRoomAvatarMachines(self.RoomId)
    if avatarMachines ~= nil then
        for i = 1, #avatarMachines do
            avatarMachines[i]:SetView(nil)
        end
    end
end

---精灵排序
function LoungeSceneView:OnOrderTimer()
    for i = 1, #self.SortInfoList do
        local info = self.SortInfoList[i]
        if info.Type == LoungeSceneView.eSortType.Avatar then
            info.PosY = info.Machine.Info.TileY
            info.PosX = info.Machine.Info.TileX
            info.OffsetY = info.Machine.Info.RandomY
        end
    end
    table.sort(self.SortInfoList, function(a, b)
        if a.PosY == b.PosY then
            if a.PosX == b.PosX then
                return a.OffsetY > b.OffsetY
            else
                return a.PosX > b.PosX
            end
        else
            return a.PosY > b.PosY
        end
    end)
    local begin = 10
    for i = 1, #self.SortInfoList do
        self.SortInfoList[i].Node.transform:SetSiblingIndex(begin + i)
    end
end

--endregion -------------------精灵view-------------------------

--region -------------------------金币view-------------------
function LoungeSceneView:InitCoinViews()
    self.CoinViews = {}
    local roomCoins = HotelData:GetInstance():GetRoomCoinDatas(self.RoomId)
    for i = 1, #roomCoins do
        local fieldId = roomCoins[i].FurnitureFieldId
        local index = roomCoins[i].DropIndex
        local coinPos = MapManager:GetInstance():GetFurnitureCoinPos(self.RoomId, fieldId, index)
        local coinNode = self:CloneCoinNode(self.go_table.obj_scene, coinPos)
        ---@type FurnitureTransView
        local coinView = self:GetOrAddComponent(coinNode, require("CoinView"), roomCoins[i])
        coinView:initCoin()
        table.insert(self.CoinViews, coinView)

        --添加到排序中
        local tilePos = MapManager:GetInstance().FurnitureCoinPosDic[fieldId][index]
        ---@type LoungeSortInfo
        local sortInfo = {
            Type = LoungeSceneView.eSortType.FurnitureSingle,
            Node = coinNode,
            PosX = tilePos.x,
            PosY = tilePos.y,
            OffsetY = Mathf.Random(1,100)/1000
        }
        table.insert(self.SortInfoList, sortInfo)
    end
end

---@param furnitureFieldId number 家具typeId
---@param index number 掉落位置
function LoungeSceneView:GetCoinView(furnitureFieldId, dropIndex)
    if self.CoinViews ~= nil then
        for i = 1, #self.CoinViews do
            if self.CoinViews[i].FurnitureFieldId == furnitureFieldId and
                    self.CoinViews[i].DropIndex == dropIndex then
                return self.CoinViews[i]
            end
        end
    end
    return nil
end

---@param pNode UnityEngine.GameObject
---@return UnityEngine.GameObject
function LoungeSceneView:CloneCoinNode(pNode, pos)
    ---@type UnityEngine.GameObject
    local coinGo = CS.UnityEngine.Object.Instantiate(self.go_table.obj_coin, pNode.transform)
    coinGo.transform.localPosition = pos
    coinGo.transform.gameObject:SetActive(true)

    return coinGo
end
---触发金币收益
---@param coinData HotelCoinData 金币数据
function LoungeSceneView:OnTriggerCoin(coinData)
    local roomId = coinData.RoomId
    if roomId == self.RoomId then
        local fieldId = coinData.FurnitureFieldId
        local index = coinData.DropIndex
        local coinView = self:GetCoinView(fieldId, index)
        if coinView == nil then
            local coinPos = MapManager:GetInstance():GetFurnitureCoinPos(self.RoomId, fieldId, index)
            local coinNode = self:CloneCoinNode(self.go_table.obj_scene, coinPos)
            ---@type FurnitureTransView
            coinView = self:GetOrAddComponent(coinNode, require("CoinView"), coinData)
            table.insert(self.CoinViews, coinView)
            --添加到排序中
            local tilePos = MapManager:GetInstance().FurnitureCoinPosDic[fieldId][index]
            ---@type LoungeSortInfo
            local sortInfo = {
                Type = LoungeSceneView.eSortType.FurnitureSingle,
                Node = coinNode,
                PosX = tilePos.x,
                PosY = tilePos.y,
                OffsetY = Mathf.Random(1,100)/1000
            }
            table.insert(self.SortInfoList, sortInfo)
        end
        ---显示金币掉落
        coinView:ShowCoinEffect()
    end
end

---收取完金币
---@param coinData HotelCoinData 金币数据
function LoungeSceneView:OnCoinCollected(coinData)
    if coinData.RoomId == self.RoomId then
        local coinView = self:GetCoinView(coinData.FurnitureFieldId, coinData.DropIndex)
        if coinView ~= nil then
            --从排序中移除
            for i = 1, #self.SortInfoList do
                if self.SortInfoList[i].Node ~= nil and self.SortInfoList[i].Node == coinView.gameObject then
                    table.remove(self.SortInfoList, i)
                    break
                end
            end
            table.removebyvalue(self.CoinViews,coinView)
            self:DestoryComponentGameObj(coinView.gameObject)
            coinView = nil
        end
    end
end

--endregion -------------------------金币view-------------------

---可用
---@protected
function LoungeSceneView:OnEnable()
end

---不可用
---@protected
function LoungeSceneView:OnDisable()
end

---点击Button回调
---@param btn UnityEngine.UI.Button 按钮
function LoungeSceneView:OnClickBtn(btn)
end

---点击Toggle回调
---@protected
---@param toggle UnityEngine.UI.Toggle Toggle
---@param isOn boolean 是否选中
function LoungeSceneView:OnClickToggle(toggle, isOn)
end

---数据清理
---@protected
function LoungeSceneView:OnDestroy()
    --LoungeSceneView.ParentCls.OnDestroy(self)
    TimerInst:StopAndClearTimer(self.Timer)
    TimerInst:StopAndClearTimer(self.OrderTimer)
    self.SortInfoList = nil
    for i, v in pairs(self.NodeEffectDic) do
        v:Kill()
    end
    self:ClearAllAvatarView()
    self.CoinViews = nil
end

function LoungeSceneView:OnTimer()
    --Log.Debug("timer update")
end

return LoungeSceneView

---@class LoungeSortInfo 节点排序信息
---@field Node UnityEngine.GameObject 节点
---@field Type LoungeSceneView.eSortType 排序类型
---@field Machine AvatarStateMachine 精灵状态机
---@field PosY number
---@field PosX number
---@field OffsetY number