---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by asd.
--- DateTime: 2022/11/3 18:26
---
local UIComBase = require("UIComBase")
local AvatarManager = require("AvatarManager")
local AvatarEvent = require("AvatarEvent")
local EventManager = require("EventManager")
local AvatarStateMachine = require("AvatarStateMachine")
local GameDefine = require("GameDefine")
local UIManager = require("UIManager")
local UIDefine = require("UIDefine")
local SceneManager = require("SceneManager")
local TimerManager = require("TimerManager")

---@class AvatarView : UIComBase 角色组件
---@field private go_table AvatarView_GoTable GoTable
---@field private ParentCls UIBase 父窗口类
---@field Direction AvatarStateMachine.eDirection
---@field IsHotel boolean 是否主场景avatar
---@field UiSkeleton SEngine.UI.UISpine
---@field UiSkeleton2 SEngine.UI.UISpine
local AvatarView = Class("AvatarView", UIComBase)

---@class AvatarView.eBubbleType 气泡类型
AvatarView.eBubbleType = {
    NeedFurniture = 1,
    Face = 2,
    Dialog  = 3,
}

---添加Events监听事件
function AvatarView:Awake()
    self.Direction = AvatarStateMachine.eDirection.LeftTop
end
--- 窗口显示[protected]
---@param ... any @窗口传参
function AvatarView:OnCreate(scale,isHotel)
    self.BaseScale = scale or 1
    self.transform.localScale = Vector3.New(self.BaseScale,self.BaseScale,1)
    self.IsHotel = isHotel or false

    self.UiSkeleton = self.go_table.obj_avatarSkel:GetComponent(typeof(CS.SEngine.UI.UISpine))
    if self.go_table.obj_avatarSkel2 ~= nil then
        self.UiSkeleton2 = self.go_table.obj_avatarSkel2:GetComponent(typeof(CS.SEngine.UI.UISpine))
    end
    self:ShowNoBubble()
end

---设置动作
---@param name string 动作名
---@param loop boolean 循环
---@param complete fun() 完成回调
function AvatarView:SetAnim(name,loop,complete)
    Log.Info("设置动作：%s",name)
    self.UiSkeleton:PlayAnim(name,loop,complete)
    if self.UiSkeleton2 then
        self.UiSkeleton2:PlayAnim(name,loop)
    end
end

---更新位置
---@param pos Vector3
function AvatarView:SetPosition(pos)
    if self.transform ~= nil then
        self.transform.localPosition = pos
    end
end

function AvatarView:SetSkin(name)
    Log.Info("设置皮肤：%s",name)
    self.UiSkeleton:SetSkin(name)
    self.UiSkeleton2:SetSkin(name)
end

function AvatarView:SetDirection(dir)
    self.Direction = dir
    if self.transform ~= nil then
        if dir == AvatarStateMachine.eDirection.LeftTop or dir == AvatarStateMachine.eDirection.LeftBottom then
            self.go_table.obj_avatar.transform.localScale = Vector3.New(1,1,1)
        else
            self.go_table.obj_avatar.transform.localScale = Vector3.New(-1,1,1)
        end
    end
    if self.IsHotel then
        self.go_table.obj_avatarSkel:SetActive( true)
        self.go_table.obj_avatarSkel2:SetActive(false)
    else
        if self.Direction == AvatarStateMachine.eDirection.LeftTop or self.Direction == AvatarStateMachine.eDirection.RightTop then
            self.go_table.obj_avatarSkel2:SetActive( true)
            self.go_table.obj_avatarSkel:SetActive( false)
        else
            self.go_table.obj_avatarSkel:SetActive( true)
            self.go_table.obj_avatarSkel2:SetActive(false)
        end
    end
end
--
-----@param pos Vector3 位置
-----@param speed number 速度
--function AvatarView:MoveTo(pos,speed)
--    local distance = Vector3.Distance(pos,self.transform.localPosition)
--    local time = distance / speed
--    self.transform:DOLocalMove(pos,time):SetEase(CS.DG.Tweening.Ease.Unset)
--
--    --local angle = Vector3.Angle(self.transform.localPosition,pos)
--    --Log.Debug("angle:"..angle)
--end

---显示对话hud
function AvatarView:ShowDialog(bubbleId)
    local config = Config.expression_bubble[bubbleId]
    local txt = LanguageUtil:GetValue(config.dialogue)
    self:ShowDialogText(txt)
end

function AvatarView:ResetDialogHeight()
    local fitter = self.go_table.stmp_text.gameObject:GetComponent(typeof(CS.UnityEngine.UI.ContentSizeFitter))
    fitter:SetLayoutVertical()
    local h = self.go_table.stmp_text.gameObject:GetComponent(typeof(CS.UnityEngine.RectTransform)).sizeDelta.y
    self.go_table.obj_Image:GetComponent(typeof(CS.UnityEngine.RectTransform)):SetSizeWithCurrentAnchors(CS.UnityEngine.RectTransform.Axis.Vertical, h + 45)
end

---显示表情hud
function AvatarView:ShowFace(bubbleId,angryBubbleId,angryTime)
    self.go_table.obj_dialog:SetActive(false)
    self.go_table.sbtn_need.gameObject:SetActive(false)
    self.go_table.simg_angry.gameObject:SetActive(true)

    local bubbleConfig = Config.expression_bubble[bubbleId]
    local angryBubbleConfig = Config.expression_bubble[angryBubbleId]
    if angryTime > bubbleConfig.time then
        --显示文字
        local txt = LanguageUtil:GetValue(angryBubbleConfig.dialogue)
        self:ShowDialogText(txt)
    else
        TimerManager:GetInstance():StopAndClearTimer(self.AngryTimer)
        local time = bubbleConfig.time - angryTime
        Log.Info("ShowFace",time)
        self.AngryText  = LanguageUtil:GetValue(angryBubbleConfig.dialogue)
        self.AngryTimer = TimerManager:GetInstance():GetTimerStart(time,self.ShowDialogText,self,1)
    end
end

function AvatarView:ShowDialogText(text)
    text = text or self.AngryText
    if text ~= nil then
        self.go_table.obj_dialog:SetActive(true)
        self.go_table.sbtn_need.gameObject:SetActive(false)
        self.go_table.simg_angry.gameObject:SetActive(false)
        self.go_table.stmp_text.text = text
        self:ResetDialogHeight()
    end
end

---显示需求hud
function AvatarView:ShowNeed(bubbleId,needFurnitureId)
    self.go_table.obj_dialog:SetActive(false)
    self.go_table.sbtn_need.gameObject:SetActive(true)
    self.go_table.simg_angry.gameObject:SetActive(false)

    local furnitureIcon = Config.furniture_level[needFurnitureId].icon
    self.go_table.simg_need:LoadSprite(GameDefine.eResPath.AtlasFurniture .. furnitureIcon, false, 1, function()
        -- print("详情界面动态图片加载完成")
    end)

end
---不显示气泡
function AvatarView:ShowNoBubble()
    self.go_table.obj_dialog:SetActive(false)
    self.go_table.sbtn_need.gameObject:SetActive(false)
    self.go_table.simg_angry.gameObject:SetActive(false)
end

---事件处理
---@private
---@param id EventID 事件ID
function AvatarView:EventHandle(id, args)
end

---可用
---@protected
function AvatarView:OnEnable()
end

---不可用
---@protected
function AvatarView:OnDisable()
end

---点击Button回调
---@param btn UnityEngine.UI.Button 按钮
function AvatarView:OnClickBtn(btn)
    if btn == self.go_table.sbtn_need then
        if SceneManager:GetInstance().RoomId == SceneManager.eRoomId.Lounge then
            UIManager:GetInstance():OpenUIDefine(UIDefine.DeviceView, nil, SceneManager:GetInstance().RoomId)
        end
    end
end

---点击Toggle回调
---@protected
---@param toggle UnityEngine.UI.Toggle Toggle
---@param isOn boolean 是否选中
function AvatarView:OnClickToggle(toggle, isOn)
end

---数据清理
---@protected
function AvatarView:OnDestroy()
    --TemplateView.ParentCls.OnDestroy(self)
    TimerManager:GetInstance():StopAndClearTimer(self.AngryTimer)
end

return AvatarView