---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Simon.L.
--- DateTime: 2022/10/18 10:35
---
local GameDefine = GameDefine
local GameEvent = require("GameEvent")
local PlayerPrefsUtil = require("PlayerPrefsUtil")
local Config = Config
local DeviceData = require("DeviceData")
local HotelData = require("HotelData")
local EventManager = require("EventManager")
local TimerManager = require("TimerManager")
local TimeUtil = require("TimeUtil")

---游戏公共数据管理器（单例）
---@class GameData : Singleton
---@field Gold number 金币数
---@field Diamond number 钻石数
---@field Popular number 人气值
---@field Ghost number 幽灵数
---@field SpeedTime number 加速时间
---@field Strength number 体力
local GameData = Class("GameData", Singleton)

function GameData:__init()
    ---初始化本地数据
    self:InitLocalData()
    --第二天的刷新时间
    self.UpdateTime = self:GetUpdateTime()
    self.UpdateTimer = TimerManager:GetInstance():GetTimerStartImme(1, self.OnTimer, self)
end
function GameData:GetUpdateTime()
    --获取第二天刷新时间
    local time = TimeUtil.GetDayBegin(TimeUtil.GetSecTime() + TimeUtil.HOUR_OF_DAY * TimeUtil.SECOND_OF_MINUTE * TimeUtil.SECOND_OF_MINUTE, TimeUtil.GetTimeZone())
    --time = TimeUtil.GetSecTime() + 60
    return time
end

---改变货币值（增加或者减少会发事件)
---@public
---@param type GameDefine.ePlayerProp 货币类型
---@param changeValue number 改变值
function GameData:ChangePlayerProp(type, changeValue)
    if changeValue == 0 then
        return
    end
    if type == GameDefine.ePlayerProp.Gold then
        self.Gold = self.Gold + changeValue
        EventManager:GetInstance():Broadcast(GameEvent.GoldChange, self.Gold, changeValue)
    elseif type == GameDefine.ePlayerProp.Diamond then
        self.Diamond = self.Diamond + changeValue
        EventManager:GetInstance():Broadcast(GameEvent.DiamondChange, self.Diamond, changeValue)
    elseif type == GameDefine.ePlayerProp.SpeedTime then
        self.SpeedTime = self.SpeedTime + changeValue
        EventManager:GetInstance():Broadcast(GameEvent.GhostChange, self.SpeedTime, changeValue)
    elseif type == GameDefine.ePlayerProp.Energy then
        self.Energy = self.Energy + changeValue
        EventManager:GetInstance():Broadcast(GameEvent.EnergyChange, self.Energy, changeValue)
    end
    --保存本地
    self:SaveLocalData()
end

--region  ################## 本地数据处理 ########################
---@class GameLocalData 货币本地数据结构
---@field Gold number
---@field Diamond number
---@field Popularity number
---@field Ghost number
---@field SpeedTime number
---@field Energy number
---@field EnergyRecoveryTime number
---@field EnergyBuyCount number
---@field EnergyAdCount number


function GameData:SaveLocalData()
    ---@type GameLocalData
    local localData = {
        Gold = self.Gold,
        Diamond = self.Diamond,
        Popularity = self.Popular,
        Ghost = self.Ghost,
        SpeedTime = self.SpeedTime,
        Energy = self.Energy,
        EnergyRecoveryTime = self.EnergyRecoveryTime,
        EnergyBuyCount = self.EnergyBuyCount,
        EnergyAdCount = self.EnergyAdCount
    }
    PlayerPrefsUtil.SetTable("GameLocalData", localData)
end
function GameData:InitLocalData()
    ---货币
    ---@type GameLocalData
    local localData = PlayerPrefsUtil.GetTable("GameLocalData")
    if not IsNil(localData) then
        self.Gold = localData.Gold
        self.Diamond = localData.Diamond
        self.Popular = localData.Popularity
        self.Ghost = localData.Ghost
        self.SpeedTime = localData.SpeedTime
        self.Energy = localData.Energy
        self.EnergyRecoveryTime = localData.EnergyRecoveryTime
        self.EnergyBuyCount = localData.EnergyBuyCount
        self.EnergyAdCount = localData.EnergyAdCount
    else
        self.Gold = Config.game_config.Res_GoldStart.paramNum
        self.Diamond = Config.game_config.Res_DiamondStart.paramNum
        self:RefreshPopular()
        --self.Ghost = ??
        self.SpeedTime = Config.game_config.Initial_Acceleration_Time.paramNum
        self.Energy = Config.game_config.Max_energy.paramNum
        ---初始化体力恢复时间是当前时间
        self.EnergyRecoveryTime = TimeUtil.GetSecTime()
        self.EnergyBuyCount = 1--精力购买次数默认为1
        self.EnergyAdCount = 0--当日精力广告次数
        ---初始化完了保存
        self:SaveLocalData()
    end
    -- self.Gold = 200000
end
--endregion  ################## 本地数据处理 ########################

--region ###################### 货币 ##########################

---@param costType GameDefine.ePlayerProp 货币类型
function GameData:GetCostImageName(costType)
    local costData = GameData:GetPlayerPropItemCfg(costType)
    if (costData == nil) then
        return nil

    end
    local str = costData.icon
    return str
end
----获取货币类型的item id
---@param type GameDefine.ePlayerProp 玩家属性类型
function GameData:GetPlayerPropItemId(type)
    if type == GameDefine.ePlayerProp.Gold then
        return 1000001
    elseif type == GameDefine.ePlayerProp.Diamond then
        return 1000002
    elseif type == GameDefine.ePlayerProp.Popularity then
        return 1000003
    elseif type == GameDefine.ePlayerProp.SpeedTime then
        return 1000004
    end
    return 0
end

----获取货币类型的item Config
---@param type GameDefine.ePlayerProp 玩家属性类型
function GameData:GetPlayerPropItemCfg(type)
    if type == GameDefine.ePlayerProp.Gold then
        return Config.Items[1000001]
    elseif type == GameDefine.ePlayerProp.Diamond then
        return Config.Items[1000002]
    elseif type == GameDefine.ePlayerProp.Popularity then
        return Config.Items[1000003]
    elseif type == GameDefine.ePlayerProp.SpeedTime then
        return Config.Items[1000003]
    end
    return nil
end
--endregion ###################### 货币 ##########################

--region ####################### 人气值 ################################

--- 刷新人气值改变
function GameData:RefreshPopular()
    local prePopular = self.Popular or 0
    local totalPopular = 0
    --遍历已经解锁的房间
    for i = 1, #HotelData:GetInstance().UnlockHotelList do
        local housePopular = 0
        -------@type table<number,DeviceFieldData>
        local houseDeviceData = DeviceData:GetInstance():GetHouseData(HotelData:GetInstance().UnlockHotelList[i])
        for i2, v2 in pairs(houseDeviceData) do
            ---以解锁的家具
            if table.count(v2.UnlockFurnitureIds) > 0 then
                for i3, v3 in pairs(v2.UnlockFurnitureIds) do
                    local furniturePoplar = DeviceData:GetInstance():GetFurniturePropValue(v2.UnlockFurnitureIds[i3], DeviceData.eDevicePropType.GivePopular)
                    housePopular = housePopular + furniturePoplar
                end
            end
        end
        totalPopular = totalPopular + housePopular
    end

    local taskPopular = 0
    --旅店任务完成提供的人气
    local finshMap = HotelData:GetInstance().HotelTaskMap
    for i, v in pairs(finshMap) do
        if (v ~= nil) then
            local isOver = HotelData:GetInstance():TaskIsFinsh(v)
            if (isOver) then
                local term = Config.hotlebuild[v].award
                if (term > 0) then
                    taskPopular = taskPopular + term
                end
            end
        end
    end
    --print("旅店提供人气值"..taskPopular)
    totalPopular = totalPopular + taskPopular

    self.Popular = totalPopular
    local changeValue = self.Popular - prePopular

    self:SaveLocalData()

    EventManager:GetInstance():Broadcast(GameEvent.PopularChange, self.Popular, changeValue)
end

--endregion ####################### 人气值 ################################

--region -------------------------- 恢复体力 ----------------------------
function GameData:OnTimer()
    local curTime = TimeUtil.GetSecTime()

    --第二天刷新相关
    self.DecTime = self.UpdateTime - curTime
    if (self.DecTime <= 0) then
        self.EnergyBuyCount = 1--精力购买次数默认为1
        self.EnergyAdCount = 0--当日精力广告次数
        self:SaveLocalData()
        self.UpdataTime = self:GetUpdateTime()
    end


    --体力恢复相关
    local recover_time = Config.game_config.Energy_Recover_Time.paramNum
    local recover_timeOffset = curTime - self.EnergyRecoveryTime
    local max_energy = Config.game_config.Max_energy.paramNum
    local amount = Config.game_config.Energy_Recover_Amount.paramNum
    ---当前恢复的次数
    local recoveryTime = Mathf.Floor(recover_timeOffset / recover_time)
    ---恢复满需要的次数
    local enoughTime = Mathf.Ceil((max_energy - self.Energy) / amount)

    if (enoughTime > 0) then
        self.EnergyRecoveryTime_next = self.EnergyRecoveryTime - curTime + recover_time --下次体力恢复时间
        self.EnoughTime = self.EnergyRecoveryTime - curTime + enoughTime * recover_time --全部恢复的时间
    else
        self.EnergyRecoveryTime_next = 0
        self.EnoughTime = 0
    end
    local num = recoveryTime * amount
    if recover_timeOffset >= recover_time then

        local preEnergy = self.Energy
        if recoveryTime >= enoughTime then
            num = max_energy - self.Energy
            ---恢复满
            self.Energy = max_energy
            self.EnergyRecoveryTime = curTime
            self.EnergyRecoveryTime_next = 0
            self.EnoughTime = 0

            Log.Debug("[体力恢复]，与上次恢复的时间差：" .. recover_timeOffset .. ",恢复满")
        else
            ---恢复几次
            ---恢复满
            self.Energy = self.Energy + recoveryTime * amount
            self.EnergyRecoveryTime = self.EnergyRecoveryTime + recoveryTime * recover_time

            Log.Debug("[体力恢复]，与上次恢复的时间差：" .. recover_timeOffset .. ",恢复" .. (recoveryTime * amount) .. "点")
        end
        self:SaveLocalData()
        if (self.Energy - preEnergy > 0) then
            EventManager:GetInstance():Broadcast(GameEvent.EnergyChange, self.Energy, self.Energy - preEnergy)
            EventManager:GetInstance():Broadcast(GameEvent.EnergyMoveEvent, num)
        end

    end
end

--钻石购买恢复体力
---@param zsNum number 钻石数量
---@param energyNum number 恢复的体力数量
function GameData:RecverEnergyByDiamond(zsNum, energyNum)
    self.EnergyBuyCount = self.EnergyBuyCount + 1
    self:ChangePlayerProp(GameDefine.ePlayerProp.Diamond, -zsNum)
    self:ChangePlayerProp(GameDefine.ePlayerProp.Energy, energyNum)
end

--看广告恢复体力
---@param energyNum number 恢复的体力数量
function GameData:RecverEnergyByAD(energyNum)
    self.EnergyAdCount = self.EnergyAdCount + 1
    self:ChangePlayerProp(GameDefine.ePlayerProp.Energy, energyNum)
end

--endregion -------------------------- 恢复体力 ----------------------------



---开启金币飞行
function GameData:StartFlyCoin(transform, num)
    if (self.StartPosArray == nil) then
        self.StartPosArray = {}
    end

    EventManager:GetInstance():Broadcast(GameEvent.CoinFlyEvent, transform, num)
end
return GameData