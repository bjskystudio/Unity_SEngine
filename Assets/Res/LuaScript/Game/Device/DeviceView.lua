---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by asd.
--- DateTime: 2022/10/9 19:02
---
local DeviceMenuItem = require("DeviceMenuItem")

local UIBase = require("UIBase")
local PopBase = require("PopBase")
local GameEvent = require("GameEvent")
local Log = require("Log")
local ConfigManager = require("ConfigManager")
local LoopListViewHelper = LoopListViewHelper
local GameDataInst = require("GameData"):GetInstance()
local HotelDataInst = require("HotelData"):GetInstance()
local DeviceData = require("DeviceData")

---@class DeviceView : UIBase 窗口
---@field private go_table DeviceView_GoTable GoTable
---@field private ParentCls UIBase 父窗口类
local DeviceView = Class("DeviceView", PopBase)

---添加Events监听事件
function DeviceView:Awake()
    self.ClickSpaceClose = true
    self:AddEvent(GameEvent.ClickLockFieldEvent)
    self:AddEvent(GameEvent.ClosePopEvent)
    self:AddEvent(GameEvent.UpGradeFurnitureEvent)
end
--- 窗口显示[protected]
---@param ... any @窗口传参

function DeviceView:OnCreate(roomId)

    self.isFirst = true
    self.MenuList = self.go_table.list_MenuList
    self.DeviceList = self.go_table.list_DeviceList
    self.SelectHouseId = roomId
    self:SetTitle(LanguageUtil:GetValue("Common_UItips_furniture"))
    self:InitDeviceMenuList()
    self:InitDeviceView(roomId)

    if (DeviceData:GetInstance().JumpFieldId ~= nil) then
        self:SetListViewLocation(DeviceData:GetInstance().JumpFieldId)
    end
    if (DeviceData:GetInstance().FurniturePointId ~= nil) then
        --场景人物需求跳转
        self:SetListViewLocation(DeviceData:GetInstance().FurniturePointId)
    end
end

---@param roomId number 房间id
function DeviceView:InitDeviceView()

    --房间id
    local isUnlock = HotelDataInst:HouseIsUnlock(self.SelectHouseId)
    if (not isUnlock) then
        self.DeviceList.gameObject:SetActive(false)
        return
    end

    self.DeviceList.gameObject:SetActive(true)
    if (self.isFirst) then
        self:InitDeviceList()
        self.isFirst = false;
    end

end

function DeviceView:InitDeviceList()
    ---@type furniture_Item
    self.DeviceDataList = ConfigManager.GetConfigByField(ConfigManager.furniture, "house_type", { self.SelectHouseId }, function(l, r)
        return l.sort < r.sort
    end)

    LoopListViewHelper.InitCommonListView(self, self.DeviceList, self.DeviceDataList, "DeviceListItem")
    --self.DeviceList:MovePanelToItemIndex(3, 300)

    --[[ local listViewGetItem = function(_, _, index)
         index = index + 1
         if index < 0 or index > #self.DeviceDataList then
             return nil
         end
         local listViewItem = self.DeviceList:NewListViewItem("DeviceListItem")
         ---@type DeviceListItem
         local itemCom = self:GetOrAddComponent(listViewItem.gameObject, require("DeviceListItem"))
         itemCom:DeviceInitData(self.DeviceDataList[index])
         return listViewItem
     end
     self.DeviceList:InitListView(#self.DeviceDataList, handler(self, listViewGetItem))]]
end
function DeviceView:OnGetDeviceItemByIndex()

end
--region 菜单list
function DeviceView:InitDeviceMenuList()

    local data = {}

    for i, v in pairs(ConfigManager.room_config) do
        if (v.type > 0) then
            table.insert(data, v)
        end
    end

    self.MenuDataList = table.toArray(data)
    --self.MenuList:InitListView(#self.MenuDataList,handler(self,self.OnGetMenuItemByIndex))
    --self.MenuList:MovePanelToItemIndex(#self.MenuDataList,0)

    ---使用helper代理创建
    LoopListViewHelper.InitCommonListView(self, self.MenuList, self.MenuDataList, "DeviceMenuItem", self.SelectHouseId)
    self.MenuList:MovePanelToItemIndex(#self.MenuDataList, 0)
end

function DeviceView:SetMenuSelectId(houseId)
    if houseId ~= self.SelectHouseId then
        self.SelectHouseId = houseId
        Log.Debug("select house changed:" .. houseId)
        self:InitDeviceView(houseId)
        --dispatch event houseId id changed
    end
end
--
-----@param index number
--function DeviceView:OnGetMenuItemByIndex(listView,index)
--    index = index + 1
--    if index <0 or index >#self.MenuDataList then
--        return nil
--    end
--    local listViewItem = listView:NewListViewItem("DeviceMenuItem")
--    local comp = self:GetOrAddComponent(listViewItem.gameObject,DeviceMenuItem)
--    comp:InitItemData(self.MenuDataList[index],index,self.SelectHouseId)
--    return listViewItem
--end
--endregion

---事件处理
---@private
---@param id EventID 事件ID
function DeviceView:EventHandle(id, ...)
    if (id == GameEvent.ClickLockFieldEvent) then
        self:SetListViewLocation(...)
    elseif id == GameEvent.ClosePopEvent then
        local tab = { ... }
        if (tab[1] == "DeviceView") then
            self:Close()
        end

    elseif id == GameEvent.UpGradeFurnitureEvent then
        self:Close()
    end
end

--定位指定栏位
function DeviceView:SetListViewLocation(field)
    --定位逻辑
    local targetIndex = 0
    for i, v in pairs(self.DeviceDataList) do
        if (v.id == field) then
            targetIndex = i
        end
    end

    self.DeviceList:MovePanelToItemIndex(targetIndex - 1, 100)
end
---可用
---@protected
function DeviceView:OnEnable()
end

---不可用
---@protected
function DeviceView:OnDisable()
end

---点击Button回调
---@param btn UnityEngine.UI.Button 按钮
function DeviceView:OnClickBtn(btn)
end

---点击Toggle回调
---@protected
---@param toggle UnityEngine.UI.Toggle Toggle
---@param isOn boolean 是否选中
function DeviceView:OnClickToggle(toggle, isOn)
end

---数据清理
---@protected
function DeviceView:OnDestroy()
    --DeviceView.ParentCls.OnDestroy(self)
    DeviceData:GetInstance().FurniturePointId = nil
end

return DeviceView