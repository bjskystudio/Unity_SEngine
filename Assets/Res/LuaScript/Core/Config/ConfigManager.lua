---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Simon.L.
--- DateTime: 2022/10/12 19:32
---

---@type ConfigManager 配置文件管理
local ConfigManager = {}

---@field _config table 全局配置表的加载路径引用
local _config = _G.ConfigList

---@field _catchRequire table 已加载的配置表
local _catchRequire = {}

---@field _catchRequireKey table 已加载的配置表的Key表
local _catchRequireKey = {}

---RemoveCatchRequire 移除配置文件
---@param name table
function ConfigManager.RemoveCatchRequire(name)
    if _catchRequire[name] then
        _catchRequireKey[_catchRequire[name]] = nil
    end

    _catchRequire[name] = nil
end

function ConfigManager.Dispose()
    _catchRequire = {}
    _catchRequireKey = {}
end

local mt = { __mode = "k" }
setmetatable(_catchRequireKey, mt)

local mt2 = {
    __index = function(_, k)
        local config = _catchRequire[k]
        if config == nil then
            config = realRequire(_config[k][1])
            _catchRequire[k] = config
            _catchRequireKey[config] = k
        end
        return config
    end
}
--通过属性id匹配表的内容
---@public
---@param config table 表格
---@param fieldname string 字段名
---@param values any 字段值
---@param sort fun(l:any,r:any) 排序函数
---@return table
function ConfigManager.GetConfigByField(config, fieldname, values, sort)
    local tab = {}

    for k, v in pairs(config) do
        for _, v1 in pairs(values) do
            if v[fieldname] == v1 then
                table.insert(tab, v)
            end
        end
    end
    if sort then
        table.sort(
                tab,
                function(l, r)
                    return sort(l, r)
                end)
    end
    return tab
end


setmetatable(ConfigManager, mt2)

_G.Config = ConfigManager
---@type ConfigManager
return ConfigManager
